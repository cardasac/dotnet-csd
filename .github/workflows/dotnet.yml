name: .NET
env:
  AZURE_WEBAPP_NAME: csd-demo
  AZURE_WEBAPP_PACKAGE_PATH: "."
  DOTNET_VERSION: "7.0.x"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  packages: write
  actions: write
  statuses: write

jobs:
  hadolint:
    name: Run hadolint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run hadolint
        uses: hadolint/hadolint-action@f988afea3da57ee48710a9795b6bb677cc901183
        with:
          dockerfile: ./webapp/Dockerfile
          format: sarif
          output-file: hadolint-results.sarif
          no-fail: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: hadolint-results.sarif
          wait-for-processing: true
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Publish
        run: dotnet publish webapp/webapp.csproj -c Release -o website -r linux-x64 --self-contained true /p:UseAppHost=true
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: website
          path: website/**
          if-no-files-found: error
  deploy-staging:
    runs-on: ubuntu-latest
    environment: dev
    needs:
      - build
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: website
          path: website
      - name: "Run Azure webapp deploy action using publish profile credentials"
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }}
          package: "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/website"
